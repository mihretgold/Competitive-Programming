def max_sum_contiguous_subarray(nums: list[int]) -> int:
    if not nums:
        return 0

    max_sum_so_far = None
    max_sum_ending_here = 0

    for num in nums:
        max_sum_ending_here += num

        if max_sum_so_far is None or (max_sum_so_far is not None and max_sum_so_far < max_sum_ending_here):
            max_sum_so_far = max_sum_ending_here

        # This sum is of no use for the next elements. Hence, we shall start afresh
        if max_sum_ending_here < 0:
            max_sum_ending_here = 0

    assert max_sum_so_far is not None
    return max_sum_so_far

def test():
    nums = [-1, 3, 4, -2, 5, -7]
    max_sum = max_sum_contiguous_subarray(nums)
    assert max_sum == 10

if __name__ == '__main__':
    test()